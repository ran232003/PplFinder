{"version":3,"sources":["components/Text/style.js","components/Text/Text.js","components/Spinner/Spinner.js","components/CheckBox/style.js","components/CheckBox/CheckBox.js","components/UserList/style.js","context/PageContext.js","components/UserList/UserList.js","pages/Home/style.js","pages/Home/Home.js","hooks/usePeopleFetch.js","theme/ThemeProvider.js","components/NavBar/NavBar.js","AppRouter.js","index.js"],"names":["Text","styled","div","size","bold","children","Typography","Spinner","color","thickness","variant","CircularProgress","CheckBox","isChecked","onChange","label","value","updateFilter","FormControlLabel","control","Checkbox","checked","UserList","List","User","UserInfo","UserPicture","img","SpinnerWrapper","IconButtonWrapper","isVisible","Filters","PageContext","createContext","pageNum","handleChangePage","users","isLoading","context","useContext","useState","hoveredUserId","setHoveredUserId","noFilter","setNoFilter","Brazil","Australia","Canada","Germany","Turkey","filterState","setFilterState","handleFavorite","user","favorite","localStorage","removeItem","email","setItem","lable","handleMouseEnter","index","useEffect","checkState","country","checkFilter","handleMouseLeave","map","location","onMouseEnter","onMouseLeave","src","picture","large","alt","name","title","first","last","street","number","city","onClick","IconButton","console","log","Home","Content","Header","setUsers","setIsLoading","fetchUsers","a","axios","get","response","data","results","checkingIcon","getItem","usePeopleFetch","ThemeProvider","overrides","MuiTab","root","backgroundColor","theme","React","useMemo","createMuiTheme","palette","type","primary","main","error","CssBaseline","NavBar","setValue","AppBar","position","style","top","Tabs","_e","newValue","aria-label","indicatorColor","textColor","Tab","AppRouter","setChangePage","Provider","val","exact","path","component","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.a10a5164.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const Text = styled.div`\r\n  font-size: ${({ size }) => size};\r\n  font-weight: ${({ bold }) => (bold ? \"700\" : \"400\")};\r\n`;\r\n","import React from \"react\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport * as S from \"./style\";\r\n\r\nconst Text = ({ size = \"14px\", children, bold }) => {\r\n  return (\r\n    <Typography>\r\n      <S.Text size={size} bold={bold}>\r\n        {children}\r\n      </S.Text>\r\n    </Typography>\r\n  );\r\n};\r\n\r\nexport default Text;\r\n","import React from \"react\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nconst Spinner = ({ size, color, thickness, variant }) => {\r\n  return (\r\n    <CircularProgress size={size} color={color} thickness={thickness} variant={variant} />\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import styled from \"styled-components\";\r\n\r\nexport const CheckBox = styled.div``;\r\n","import React from \"react\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport * as S from \"./style\";\r\n\r\nconst CheckBox = ({ isChecked, onChange, label, value,updateFilter }) => {\r\n  const handleChange = () => {\r\n    onChange && onChange(value);\r\n    updateFilter(value,label);\r\n  };\r\n  \r\n  return (\r\n    <S.CheckBox>\r\n      <FormControlLabel\r\n        control={<Checkbox checked={isChecked} onChange={handleChange} color=\"primary\" />}\r\n        label={label}\r\n      />\r\n    </S.CheckBox>\r\n  );\r\n};\r\n\r\nexport default CheckBox;\r\n","import styled from \"styled-components\";\r\n\r\nexport const UserList = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const List = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 35px;\r\n  width: 500px;\r\n  height: calc(100vh - 270px);\r\n  margin-block-start: 30px;\r\n  overflow-y: auto;\r\n`;\r\n\r\nexport const User = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 16px;\r\n`;\r\n\r\nexport const UserInfo = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  width: 100%;\r\n  max-height: 128px;\r\n  gap: 2px;\r\n  overflow: hidden;\r\n`;\r\n\r\nexport const UserPicture = styled.img`\r\n  border-radius: 45%;\r\n`;\r\n\r\nexport const SpinnerWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const IconButtonWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  opacity: ${({ isVisible }) => (isVisible ? 1 : 0)};\r\n  transition: opacity 0.2s ease-in-out;\r\n`;\r\n\r\nexport const Filters = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  & > * {\r\n    margin-inline-end: 8px;\r\n  }\r\n`;\r\n","import { createContext } from \"react\";\r\n\r\nconst PageContext = createContext({\r\n    pageNum:0,\r\n    handleChangePage:()=>{},\r\n    });\r\n\r\nexport default PageContext;","import React, { useContext, useEffect, useState } from \"react\";\r\nimport Text from \"components/Text\";\r\nimport Spinner from \"components/Spinner\";\r\nimport CheckBox from \"components/CheckBox\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport * as S from \"./style\";\r\nimport PageContext from \"context/PageContext\";\r\n\r\nconst UserList = ({ users, isLoading }) => {\r\n  const context = useContext(PageContext);\r\n  const [hoveredUserId, setHoveredUserId] = useState();\r\n  const[noFilter,setNoFilter] = useState(true)\r\n  const[renderPage,setRenderPage] = useState(context.pageNum)\r\n  const[filterState ,setFilterState] = useState({\r\n    Brazil:false,\r\n    Australia:false,\r\n    Canada:false,\r\n    Germany:false,\r\n    Turkey:false,\r\n  });\r\n  const handleFavorite = (user)=>{\r\n    if(!user.favorite){\r\n      user.favorite = true;\r\n      localStorage.setItem(user.email, 'true');\r\n    }\r\n    else{\r\n      user.favorite = !user.favorite\r\n      localStorage.removeItem(user.email);\r\n    }\r\n\r\n  }\r\n\r\n  const updateFilter = (value,lable)=>{\r\n    //updating the current choose checkbox\r\n   \r\n    setFilterState(()=>{\r\n      return {...filterState,[lable]:!filterState[lable]}\r\n    })\r\n\r\n  }\r\n  const handleMouseEnter = (index) => {\r\n    setHoveredUserId(index);\r\n  };\r\n    //checking if any of the checkBox is true\r\n\r\n  const checkFilter = ()=>{\r\n    for (const country in filterState) {\r\n        if(filterState[country] !== false)\r\n        {\r\n          \r\n          return false\r\n        }\r\n    }\r\n    return true;\r\n  }\r\nuseEffect(()=>{\r\n  //updating after every change in the checkbox\r\n  const checkState = checkFilter();\r\n  setNoFilter(checkState);\r\n  \r\n},[filterState,context.pageNum])\r\n  const handleMouseLeave = (user) => {\r\n    if(!user.favorite){\r\n    setHoveredUserId();\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <S.UserList>\r\n      <S.Filters>\r\n        <CheckBox value=\"BR\" updateFilter = {updateFilter} label=\"Brazil\" />\r\n        <CheckBox value=\"AU\" updateFilter = {updateFilter} label=\"Australia\" />\r\n        <CheckBox value=\"CA\" updateFilter = {updateFilter} label=\"Canada\" />\r\n        <CheckBox value=\"DE\" updateFilter = {updateFilter} label=\"Germany\" />\r\n        <CheckBox value=\"TR\" updateFilter = {updateFilter} label=\"Turkey\" />\r\n      </S.Filters>\r\n      <S.List>\r\n        {users.map((user, index) => {\r\n          //if no filter show everything so every country is false\r\n          //if no filter is false then check which country is true\r\n          if((noFilter === true||filterState[user?.location.country] === true)&&context.pageNum === 0){\r\n            console.log(context.pageNum)\r\n          return (\r\n            <S.User\r\n              key={index}\r\n              onMouseEnter={() => handleMouseEnter(index)}\r\n              onMouseLeave={() =>handleMouseLeave(user)}\r\n            >\r\n              <S.UserPicture src={user?.picture.large} alt=\"\" />\r\n              <S.UserInfo>\r\n                <Text size=\"22px\" bold>\r\n                  {user?.name.title} {user?.name.first} {user?.name.last}\r\n                </Text>\r\n                <Text size=\"14px\">{user?.email}</Text>\r\n                <Text size=\"14px\">\r\n                  {user?.location.street.number} {user?.location.street.name}\r\n                </Text>\r\n                <Text size=\"14px\">\r\n                  {user?.location.city} {user?.location.country}\r\n                </Text>\r\n              </S.UserInfo>\r\n              <S.IconButtonWrapper onClick = {()=>{handleFavorite(user)}} isVisible={index === hoveredUserId||user.favorite === true}>\r\n                <IconButton>\r\n                  <FavoriteIcon color=\"error\" />\r\n                </IconButton>\r\n              </S.IconButtonWrapper>\r\n            </S.User>\r\n          );}\r\n          //favorite page display\r\n          else if((noFilter === true||filterState[user?.location.country] === true)&&context.pageNum === 1 &&user.favorite === true){\r\n            return (\r\n              <S.User\r\n                key={index}\r\n                onMouseEnter={() => handleMouseEnter(index)}\r\n                onMouseLeave={() =>handleMouseLeave(user)}\r\n              >\r\n                <S.UserPicture src={user?.picture.large} alt=\"\" />\r\n                <S.UserInfo>\r\n                  <Text size=\"22px\" bold>\r\n                    {user?.name.title} {user?.name.first} {user?.name.last}\r\n                  </Text>\r\n                  <Text size=\"14px\">{user?.email}</Text>\r\n                  <Text size=\"14px\">\r\n                    {user?.location.street.number} {user?.location.street.name}\r\n                  </Text>\r\n                  <Text size=\"14px\">\r\n                    {user?.location.city} {user?.location.country}\r\n                  </Text>\r\n                </S.UserInfo>\r\n                <S.IconButtonWrapper onClick = {()=>{handleFavorite(user)}} isVisible={index === hoveredUserId||user.favorite === true}>\r\n                  <IconButton>\r\n                    <FavoriteIcon color=\"error\" />\r\n                  </IconButton>\r\n                </S.IconButtonWrapper>\r\n              </S.User>\r\n            )\r\n          }\r\n        })}\r\n      \r\n        {isLoading && (\r\n          <S.SpinnerWrapper>\r\n            <Spinner color=\"primary\" size=\"45px\" thickness={6} variant=\"indeterminate\" />\r\n          </S.SpinnerWrapper>\r\n        )}\r\n      </S.List>\r\n    </S.UserList>\r\n  );\r\n};\r\n\r\nexport default UserList;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Home = styled.div`\r\n  display: flex;\r\n  height: 100vh;\r\n  align-items: center;\r\n  justify-content: center;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100%;\r\n  padding-block-start: 100px;\r\n`;\r\n\r\nexport const Header = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nexport const Form = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 25px;\r\n  max-width: 400px;\r\n  width: 100%;\r\n`;\r\n","import React from \"react\";\r\nimport Text from \"components/Text\";\r\nimport UserList from \"components/UserList\";\r\nimport { usePeopleFetch } from \"hooks\";\r\nimport * as S from \"./style\";\r\n\r\nconst Home = () => {\r\n  const { users, isLoading } = usePeopleFetch();\r\n  return (\r\n    <S.Home>\r\n      <S.Content>\r\n        <S.Header>\r\n          <Text size=\"64px\" bold>\r\n            PplFinder\r\n          </Text>\r\n        </S.Header>\r\n        <UserList users={users} isLoading={isLoading} />\r\n      </S.Content>\r\n    </S.Home>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport const usePeopleFetch = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  async function fetchUsers() {\r\n    setIsLoading(true);\r\n    const response = await axios.get(`https://randomuser.me/api/?results=25&page=1`);\r\n    //2 solutions: 1. localStorage 2. DB. \r\n    response.data.results.map((user)=>{\r\n      const checkingIcon = localStorage.getItem(user.email);\r\n      if(checkingIcon){\r\n        user.favorite = true;\r\n      }\r\n      else{\r\n        user.favorite = false;\r\n      }\r\n      \r\n    })\r\n    \r\n    setIsLoading(false);\r\n    setUsers(response.data.results);\r\n  }\r\n\r\n  return { users, isLoading, fetchUsers };\r\n};\r\n","import React from \"react\";\r\nimport { createMuiTheme, ThemeProvider as Provider } from \"@material-ui/core/styles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\n\r\nconst ThemeProvider = ({ children }) => {\r\n  const overrides = {\r\n    MuiTab: {\r\n      root: {\r\n        backgroundColor: \"#303030\",\r\n      },\r\n    },\r\n  };\r\n  const theme = React.useMemo(\r\n    () =>\r\n      createMuiTheme({\r\n        overrides,\r\n        palette: {\r\n          type: \"dark\",\r\n          primary: {\r\n            main: \"#84ffff\",\r\n          },\r\n          error: {\r\n            main: \"#f06292\",\r\n          },\r\n        },\r\n      }),\r\n    []\r\n  );\r\n\r\n  return (\r\n    <Provider theme={theme}>\r\n      <CssBaseline />\r\n      {children}\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default ThemeProvider;\r\n","import React, { useContext, useState } from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport PageContext from \"context/PageContext\";\r\n\r\nconst NavBar = () => {\r\n  const [value, setValue] = useState(0);\r\n  const context = useContext(PageContext);\r\n  const handleChange = (_e, newValue) => {\r\n    setValue(newValue);\r\n    context.handleChangePage(newValue);\r\n  };\r\n\r\n  return (\r\n    <AppBar position=\"static\" color=\"transparent\" style={{ position: \"fixed\", top: 0 }}>\r\n      <Tabs\r\n        value={value}\r\n        onChange={handleChange}\r\n        aria-label=\"Navigation\"\r\n        indicatorColor=\"primary\"\r\n        textColor=\"primary\"\r\n      >\r\n        <Tab label=\"Home\" index={0} />\r\n        <Tab label=\"Favorites\" index={1} />\r\n      </Tabs>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React, { useState } from \"react\";\r\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { Home } from \"pages\";\r\nimport { ThemeProvider } from \"theme\";\r\nimport NavBar from \"components/NavBar\";\r\nimport PageContext from \"context/PageContext\";\r\n\r\nconst AppRouter = () => {\r\n  const[pageNum, setChangePage] = useState(0);\r\n  const handleChangePage = (val)=>{\r\n    setChangePage(val);\r\n  }\r\n  return (\r\n    \r\n    <ThemeProvider>\r\n      <PageContext.Provider value = {{pageNum:pageNum,handleChangePage:handleChangePage}}>\r\n      <Router>\r\n        <NavBar />\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Home} />\r\n        </Switch>\r\n      </Router>\r\n      </PageContext.Provider>\r\n    </ThemeProvider>\r\n    \r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport AppRouter from \"AppRouter\";\r\n\r\nReactDOM.render(<AppRouter />, document.querySelector(\"#root\"));\r\n"],"sourceRoot":""}